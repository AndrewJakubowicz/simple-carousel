{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EACL,aAAa,EACb,QAAQ,EACR,KAAK,EACL,kBAAkB,GACnB,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAkB,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,MAAM,gBAAgB,CAAC;AAEjK,OAAO,mBAAmB,CAAC;AAG3B,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAmCW,oBAAe,GAAG,CAAC,CAAC;QACD,eAAU,GAAG,CAAC,CAAC;QAwC3C,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;QAChE,CAAC,CAAA;QAED,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;QACjE,CAAC,CAAA;IAqCH,CAAC;IA9EU,MAAM;QACb,MAAM,eAAe,GAAG;YACtB,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,IAAI;SACpC,CAAC;QAEF,OAAO,IAAI,CAAA;;oBAEK,IAAI,CAAC,mBAAmB;mBACzB,IAAI,CAAC,mBAAmB;UACjC,sBAAsB;;;;iBAIf,QAAQ,CAAC,eAAe,CAAC;;;;;oBAKtB,IAAI,CAAC,mBAAmB;mBACzB,IAAI,CAAC,mBAAmB;UACjC,uBAAuB;sBACX,CAAC;IACrB,CAAC;IAEQ,YAAY;QACnB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,4DAA4D;IACpD,WAAW,CAAC,MAAc;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC;IAC1F,CAAC;IAUO,KAAK,CAAC,qBAAqB,CAAC,eAAuB,EAAE,gBAAgC,EAAE,iBAAiC;QAC9H,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,SAAS,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO;SACR;QACD,+BAA+B;QAC/B,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhF,eAAe;QACf,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAElC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,qBAAqB;QACrB,SAAS,CAAC,UAAU,CAAC,CAAC;QAEtB,4CAA4C;QAC5C,MAAM,YAAY,GAAG,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpF,sBAAsB;QACtB,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEjE,6BAA6B;QAC7B,SAAS,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC;IAEO,gBAAgB;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;gBACzB,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;aAClC;SACF;IACH,CAAC;CACF,CAAA;AAtHiB,qBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgC1B,CAAA;AAEO;IAAR,KAAK,EAAE;uDAAqB;AACD;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kDAAgB;AAGP;IAAnC,kBAAkB,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC;qDAAuC;AAvC/D,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAuH1B;SAvHY,cAAc;AAyH3B,SAAS,cAAc,CAAC,GAAkB;IACxC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;AACzE,CAAC;AAED,SAAS,SAAS,CAAC,EAAe;IAChC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACnC,CAAC;AAED,SAAS,SAAS,CAAC,EAAe;IAChC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { LitElement, html, css } from 'lit';\nimport {\n  customElement,\n  property,\n  state,\n  queryAssignedNodes,\n} from 'lit/decorators.js';\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { AnimationTuple, SLIDE_LEFT_IN, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN, SLIDE_RIGHT_OUT, BOOTSTRAP_CHEVRON_LEFT, BOOTSTRAP_CHEVRON_RIGHT } from \"./constants.js\";\n\nimport './slide-button.js';\n\n@customElement('simple-carousel')\nexport class SimpleCarousel extends LitElement {\n  static override styles = css`\n    ::slotted(.slide-hidden) {\n      display: none;\n    }\n\n    /** So the elements all overlap */\n    ::slotted(*) {\n      position: absolute;\n      padding: 1em;\n    }\n\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      min-width: 500px;\n    }\n\n    #container {\n      border-radius: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      margin: 0 18px;\n\n      padding: 1em;\n      overflow: hidden;\n      position: relative;\n\n      box-shadow: var(--shadow, gray) 0.3em 0.3em 0.4em, var(--highlight, white) -0.1em -0.1em 0.3em;\n    }\n  `;\n\n  @state() containerHeight = 0;\n  @property({ type: Number }) slideIndex = 0;\n\n  // In video use @queryAssignedElements()\n  @queryAssignedNodes('', false, '*') private slideElements!: HTMLElement[];\n\n  override render() {\n    const containerStyles = {\n      height: `${this.containerHeight}px`\n    };\n\n    return html`\n      <slide-button\n          onClick=${this.navigateToPrevSlide}\n          @click=${this.navigateToPrevSlide}>\n        ${BOOTSTRAP_CHEVRON_LEFT}\n      </slide-button>\n\n      <div id=\"container\"\n        style=\"${styleMap(containerStyles)}\">\n        <slot></slot>\n      </div>\n\n      <slide-button\n          onClick=${this.navigateToNextSlide}\n          @click=${this.navigateToNextSlide}>\n        ${BOOTSTRAP_CHEVRON_RIGHT}\n      </slide-button>`;\n  }\n\n  override firstUpdated() {\n    this.containerHeight = getMaxElHeight(this.slideElements);\n    this.initializeSlides();\n  }\n\n  /** Changes current slide index by offset and wraps index */\n  private changeSlide(offset: number) {\n    const slideCount = this.slideElements.length;\n    this.slideIndex = (slideCount + ((this.slideIndex + offset) % slideCount)) % slideCount;\n  }\n\n  navigateToNextSlide = () => {\n    this.navigateWithAnimation(1, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN);\n  }\n\n  navigateToPrevSlide = () => {\n    this.navigateWithAnimation(-1, SLIDE_RIGHT_OUT, SLIDE_LEFT_IN);\n  }\n\n  private async navigateWithAnimation(nextSlideOffset: number, leavingAnimation: AnimationTuple, enteringAnimation: AnimationTuple) {\n    const elLeaving = this.slideElements[this.slideIndex];\n    if (elLeaving.getAnimations().length > 0) {\n      return;\n    }\n    // Animate out current element.\n    const leavingAnim = elLeaving.animate(leavingAnimation[0], leavingAnimation[1]);\n\n    // Change slide\n    this.changeSlide(nextSlideOffset);\n\n    const newSlideEl = this.slideElements[this.slideIndex];\n\n    // Show the new slide\n    showSlide(newSlideEl);\n\n    // Teleport it out of view and animate it in\n    const enteringAnim = newSlideEl.animate(enteringAnimation[0], enteringAnimation[1]);\n\n    // Wait for animations\n    await Promise.all([leavingAnim.finished, enteringAnim.finished]);\n\n    // Hide the element that left\n    hideSlide(elLeaving);\n  }\n\n  private initializeSlides() {\n    for (let i = 0; i < this.slideElements.length; i++) {\n      if (i === this.slideIndex) {\n        showSlide(this.slideElements[i]);\n      } else {\n        hideSlide(this.slideElements[i]);\n      }\n    }\n  }\n}\n\nfunction getMaxElHeight(els: HTMLElement[]): number {\n  return Math.max(0, ...els.map(el => el.getBoundingClientRect().height))\n}\n\nfunction hideSlide(el: HTMLElement) {\n  el.classList.add('slide-hidden');\n}\n\nfunction showSlide(el: HTMLElement) {\n  el.classList.remove('slide-hidden');\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-carousel': SimpleCarousel;\n  }\n}\n"]}